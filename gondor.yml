# The key associated to your site.
key: CUZ4WGBG6BX

# Version control system used locally for your project.
vcs: git

# Framework to use on Gondor.
framework: django

# This path is relative to your project root (the directory gondor.yml lives in.)
requirements_file: podiobooks/requirements_gondor.txt

# Commands to be executed during deployment. These can handle migrations or
# moving static files into place. Accepts same parameters as gondor run.
on_deploy:
    - manage.py syncdb --noinput
    - manage.py migrate --noinput
    - manage.py collectstatic --noinput --clear
    - manage.py collectmedia
    - manage.py mediabrute_cache
    - manage.py clear_cache

# URLs which should be served by Gondor mapping to a filesystem location
# relative to your writable storage area.
static_urls:
    - /assets/static/:
        root: site_media/staticroot/
    - /assets/media/:
        root: site_media/mediaroot/
    - /images/:
        root: /dev/null
    - /index.php:
        root: /dev/null
    - /jspb/:
        root: /dev/null
    - /sample/:
        root: /dev/null


wsgi:
    # The WSGI entry point of your application in two parts separated by a
    # colon. Example:
    #
    #     wsgi:application
    #
    # wsgi = the Python module which should be importable
    # application = the callable in the Python module
    entry_point: podiobooks.wsgi_newrelic:application
    
    # Options for gunicorn which runs your WSGI project.
    gunicorn:
        # The worker class used to run gunicorn (possible values include:
        # sync, eventlet and gevent)
        worker_class: eventlet

django:
    # The location of your manage.py. Gondor uses this as an entry point for
    # management commands. This path is relative to your project root (the
    # directory gondor.yml lives in.)
    managepy: manage.py
